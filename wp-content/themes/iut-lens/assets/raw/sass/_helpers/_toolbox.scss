@each $bp_o in $bps {
    $bp_k: nth($bp_o, 1);
    $bp_v: nth($bp_o, 2);

    @media #{$bp_k}{
        // Margin - Padding
        $vertical-values: ( 0, 0.25, 0.5, 0.75, 1, 1.5, 1.75, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 15, "auto" );

        @each $v in reverse($vertical-values){
            $gap: if(type-of($v) == 'number', $vr * $v, #{$v});

            // Margin
            @include selector('.mg-#{str-replace(inspect($v), '.', '_')}', $bp_v){ margin: $gap !important; }
            @include selector('.mgv-#{str-replace(inspect($v), '.', '_')}', $bp_v){
                margin-top: $gap !important;
                margin-bottom: $gap !important;
            }
            @include selector('.mgh-#{str-replace(inspect($v), '.', '_')}', $bp_v){
                margin-right: $gap !important;
                margin-left: $gap !important;
            }
            @include selector('.mgt-#{str-replace(inspect($v), '.', '_')}', $bp_v){ margin-top: $gap !important; }
            @include selector('.mgr-#{str-replace(inspect($v), '.', '_')}', $bp_v){ margin-right: $gap !important; }
            @include selector('.mgb-#{str-replace(inspect($v), '.', '_')}', $bp_v){ margin-bottom: $gap !important; }
            @include selector('.mgl-#{str-replace(inspect($v), '.', '_')}', $bp_v){ margin-left: $gap !important; }

            // Padding
            @if(type-of($v) == 'number'){
                @include selector('.pg-#{str-replace(inspect($v), '.', '_')}', $bp_v){ padding: $gap !important; }
                @include selector('.pgv-#{str-replace(inspect($v), '.', '_')}', $bp_v){
                    padding-top: $gap !important;
                    padding-bottom: $gap !important;
                }
                @include selector('.pgh-#{str-replace(inspect($v), '.', '_')}', $bp_v){
                    padding-right: $gap !important;
                    padding-left: $gap !important;
                }
                @include selector('.pgt-#{str-replace(inspect($v), '.', '_')}', $bp_v){ padding-top: $gap !important; }
                @include selector('.pgr-#{str-replace(inspect($v), '.', '_')}', $bp_v){ padding-right: $gap !important; }
                @include selector('.pgb-#{str-replace(inspect($v), '.', '_')}', $bp_v){ padding-bottom: $gap !important; }
                @include selector('.pgl-#{str-replace(inspect($v), '.', '_')}', $bp_v){ padding-left: $gap !important; }
            }
        }



        // Colors
        @each $color in $colors {
            $c_name: nth($color, 1);
            $c_hex: nth($color, 2);
    
            @include selector('.text-#{$c_name}', $bp_v){ color: $c_hex !important; }
            @include selector('.h-text-#{$c_name}', $bp_v){ transition: 0.2s ease-in-out; &:hover{ color: $c_hex !important; } }
            @include selector('.bg-#{$c_name}', $bp_v){ background-color: $c_hex !important; }
            @include selector('.h-bg-#{$c_name}', $bp_v){ &:hover{ background-color: $c_hex !important; } }
        }

        // Shadows
        @each $color in $colors {
            $c_name: nth($color, 1);
            $c_hex: nth($color, 2);
    
            //@include selector('.shadow-#{$c_name}-faded', $bp_v){ box-shadow: 0.25rem 0.75rem 2.5rem #{$c_hex)}66 !important; }
            @include selector('.shadow-#{$c_name}-faded', $bp_v){ box-shadow: 0 1.75rem 5rem #{$c_hex)}66 !important; }
        }



        // Borders
        @for $i from 0 through 3{
            @each $color in $colors {
                $c_name: nth($color, 1);
                $c_hex: nth($color, 2);
        
                @include selector('.bd-#{$i}-#{$c_name}', $bp_v){ border: ($i * 1px) solid $c_hex; }
                @include selector('.bdt-#{$i}-#{$c_name}', $bp_v){ border-top: ($i * 1px) solid $c_hex; }
                @include selector('.bdr-#{$i}-#{$c_name}', $bp_v){ border-right: ($i * 1px) solid $c_hex; }
                @include selector('.bdb-#{$i}-#{$c_name}', $bp_v){ border-bottom: ($i * 1px) solid $c_hex; }
                @include selector('.bdl-#{$i}-#{$c_name}', $bp_v){ border-left: ($i * 1px) solid $c_hex; }
                }
        }

        // Border radius
        @for $i from 1 through 100{
            @include selector('.radius-#{$i}', $bp_v){ border-radius: $i * 1% !important; }

            @include selector('.radius-tr-#{$i}', $bp_v){ border-top-right-radius: $i * 1% !important; }
            @include selector('.radius-br-#{$i}', $bp_v){ border-bottom-right-radius: $i * 1% !important; }
            @include selector('.radius-bl-#{$i}', $bp_v){ border-bottom-left-radius: $i * 1% !important; }
            @include selector('.radius-tl-#{$i}', $bp_v){ border-top-left-radius: $i * 1% !important; }
        }



        // Text alignments
        @include selector('.text-left', $bp_v){ text-align: left !important; }
        @include selector('.text-center', $bp_v){ text-align: center !important; }
        @include selector('.text-right', $bp_v){ text-align: right !important; }



        // Font sizes
        $font-sizes: (14, 15, 16, 18, 20);
        @each $fz in reverse($font-sizes){
            @include selector('.fz-#{str-replace(inspect($fz), '.', '_')}', $bp_v){ font-size: (($fz / 10) * 1rem) !important; }
        }

        // Font weights
        $font-weight: (300, 400, 500, 700);
        @each $fw in reverse($font-weight){
            @include selector('.fw-#{str-replace(inspect($fw), '.', '_')}', $bp_v){ font-weight: $fw !important; }
        }



        // Positions
        @include selector('.p-absolute', $bp_v){ position: absolute !important; }
        @include selector('.p-relative', $bp_v){ position: relative !important; }
        @include selector('.p-fixed', $bp_v){ position: fixed !important; }

        $values: ( 0, 2.5, 4.5, 5, 10, 7.5, 10, 20, 22.5, "auto" );
        @each $v in reverse($values){
            $gap: if(type-of($v) == 'number', $vr * $v, #{$v});

            @include selector('.top-#{str-replace(inspect($v), '.', '_')}', $bp_v){ top: $gap !important; }
            @include selector('.right-#{str-replace(inspect($v), '.', '_')}', $bp_v){ right: $gap !important; }
            @include selector('.bottom-#{str-replace(inspect($v), '.', '_')}', $bp_v){ bottom: $gap !important; }
            @include selector('.left-#{str-replace(inspect($v), '.', '_')}', $bp_v){ left: $gap !important; }

            @include selector('.bottom-minus-#{str-replace(inspect($v), '.', '_')}', $bp_v){ bottom: -#{$gap} !important; }
            @include selector('.right-minus-#{str-replace(inspect($v), '.', '_')}', $bp_v){ right: -#{$gap} !important; }
        }

        @for $i from 0 through 100 {
            @include selector('.top-#{str-replace(inspect($i), '.', '_')}-percent', $bp_v){ top: ($i * 1%) !important; }
            @include selector('.right-#{str-replace(inspect($i), '.', '_')}-percent', $bp_v){ right: $i * 1% !important; }
            @include selector('.bottom-#{str-replace(inspect($i), '.', '_')}-percent', $bp_v){ bottom: $i * 1% !important; }
            @include selector('.left-#{str-replace(inspect($i), '.', '_')}-percent', $bp_v){ left: $i * 1% !important; }
        }

        @for $z from 0 through 100 {
            @include selector('.z-#{str-replace(inspect($z), '.', '_')}', $bp_v){ z-index: $z !important; }
            @include selector('.z-minus#{str-replace(inspect($z), '.', '_')}', $bp_v){ z-index: -#{$z} !important; }
        }

        @include selector('.left-50-percent', $bp_v){ left: 50% !important; }
        @include selector('.top-50-percent', $bp_v){ top: 50% !important; }

        // Translate
        @include selector('.transX-50', $bp_v){ transform: translateX(-50%) !important; }
        @include selector('.transY-50', $bp_v){ transform: translateY(-50%) !important; }
        @include selector('.transXY-50', $bp_v){ transform: translateX(-50%) translateY(-50%) !important; }
        @include selector('.transXY-0', $bp_v){ transform: none !important; }
        
        @include selector('.hvr-transY-1', $bp_v){ transition: 0.2s ease-in-out !important; &:hover { transform: translateY(-1rem) !important; } }

        // Translate inverted
        @include selector('.transX-50-invert', $bp_v){ transform: translateX(50%) !important; }
        @include selector('.transY-50-invert', $bp_v){ transform: translateY(50%) !important; }
        @include selector('.transXY-50-invert', $bp_v){ transform: translateX(50%) translateY(50%) !important; }

        // Translate mixed
        @include selector('.transX-50-transY-50-invert', $bp_v){ transform: translateX(-50%) translateY(50%) !important; }

        @for $z from 0 through 100 {
            @include selector('.z-#{str-replace(inspect($z), '.', '_')}', $bp_v){ z-index: $z !important; }
            @include selector('.z-minus#{str-replace(inspect($z), '.', '_')}', $bp_v){ z-index: -#{$z} !important; }
        }

        @include selector('.left-50-percent', $bp_v){ left: 50% !important; }
        @include selector('.top-50-percent', $bp_v){ top: 50% !important; }

        // Translate
        @include selector('.transX-50', $bp_v){ transform: translateX(-50%) !important; }
        @include selector('.transY-50', $bp_v){ transform: translateY(-50%) !important; }
        @include selector('.transXY-50', $bp_v){ transform: translateX(-50%) translateY(-50%) !important; }
        @include selector('.transXY-0', $bp_v){ transform: none !important; }

        // Translate inverted
        @include selector('.transX-50-invert', $bp_v){ transform: translateX(50%) !important; }
        @include selector('.transY-50-invert', $bp_v){ transform: translateY(50%) !important; }
        @include selector('.transXY-50-invert', $bp_v){ transform: translateX(50%) translateY(50%) !important; }

        // Translate mixed
        @include selector('.transX-50-transY-50-invert', $bp_v){ transform: translateX(-50%) translateY(50%) !important; }



        // Overflows
        @include selector('.ovf-hidden', $bp_v){ overflow: hidden !important; }
        @include selector('.ovf-visible', $bp_v){ overflow: visible !important; }
    }
}

.content-empty {
    content: "";
}

.pgb-35-percent {
    padding-bottom: 35%;
}

.pgb-50-percent {
    padding-bottom: 50%;
}

.pgb-65-percent {
    padding-bottom: 65%;
}